---
layout: post
title: "Shell命令之文件链接"
date: 2014-11-06 00:12:51 +0800
comments: true
categories: Shell命令
---
>系统上文件链接有点儿恼人，经常无法正常解释它们的区别！好吧，其实理解了他们的原理那么他们也没那么容易混淆了！
<p>在Linux系统上存在这两种文件链接方式，他们分别是硬链接和软链接，其中软链接也称为符号链接。其实硬链接和
软链接之间还是存在不少差别，由于硬链接存在着一些限制，相对来讲软链接的使用范围更广一些。硬链接不能跨文件系统
而符号链接却没有这个限制，同时硬链接无法实现对目录的链接。这些限制都大大的降低了硬链接的使用范围。
<p>
<li>硬链接：</li>	
<p>硬链接的本质并非是创建一个新的文件，而是在目录中添加了一个链接文件名，该链接文件名指向被链接文件的inode节点。
所以在使用ls命令查看链接文件和被链接的文件将会发现，他们的文件属性、权限和链接情况一模一样。在删除硬链接文件时
只有在被链接文件对应的inode中记录的链接数量为1时才会真正删除文件。
</p>
硬链接存在的限制为： 无法在不同文件系统中创建硬链接、无法为目录创建硬链接。

<li>符号链接：</li>	
<p>
符号链接的原理与Windows下的快捷方式有些相似，符号链接可是真真切切的创建一个链接文件。这个链接文件有自己的inode
节点和磁盘数据块。不过这个链接文件的数据内容仅仅是存放被链接文件的路径，在用户访问链接文件时转向为对被链接文件
的访问。所以，用户将被链接文件删除后，将无法打开链接文件。使用ls命令查看链接文件和被链接文件可以发现他们的
inode节点是不一样的。
</p>

<p>创建链接命令：
ln	[-sf] 被链接文件 链接文件  
-s 创建符号链接  
-f 链接文件名已经存在，将其删除在创建链接文件  
</p>

	例子：	$ cp /tmp		<<== 进入tmp目录  
			$ cp /etc/manpath.config .	<<== 将etc目录下的manpath.config拷贝到当前目录  
			$ ln manpath.config manpath_hl.config	<<== 创建硬链接manpath_hl.config  
			$ rm -f manpath.config					<<== 删除被链接文件，硬链接文件依然存在
			$ cat manpath.config					<<== 可以查看文件内容，文件并未被真正删除  
			$ rm -f manpath_hl.config				<<== 删除硬链接文件  
			$ 
			$ cp /etc/manpath.config .
			$ ln -s manpath.config manpath_sl.config	<<== 创建符号链接文件manpath_sl.config  
			$ cat manpath_sl.config						<<== 可以看到文件内容
			$ rm -f manpath.config						<<== 删除被链接文件  
			$ cat manpath_sl.config						<<== 无法读取文件

